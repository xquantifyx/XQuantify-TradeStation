services:
  mt5-instance:
    build:
      context: .
      args:
        - BROKER=${BROKER:-metaquotes}
        - MT5_INSTALLER_URL=${MT5_INSTALLER_URL:-}
    container_name: xquantify-tradestation-main
    labels:
      - "com.xquantify.project=tradestation"
      - "com.xquantify.component=mt5-instance"
    restart: unless-stopped
    ports:
      - "6080:6080"  # noVNC web interface
      - "5901:5901"  # VNC direct access
    volumes:
      - ./data/mt5-main:/home/mt5user/mt5data
      - ./logs/mt5-main:/home/mt5user/logs
      - ./configs:/home/mt5user/configs:ro
    environment:
      - VNC_PASSWORD=${VNC_PASSWORD:-mt5password}
      - INSTANCE_NAME=mt5-main
      - MT5_LOGIN=${MT5_LOGIN:-}
      - MT5_PASSWORD=${MT5_PASSWORD:-}
      - MT5_SERVER=${MT5_SERVER:-}
    networks:
      - mt5-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Load balancer for multiple instances
  nginx:
    image: nginx:alpine
    container_name: xquantify-tradestation-nginx
    labels:
      - "com.xquantify.project=tradestation"
      - "com.xquantify.component=load-balancer"
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/certbot/www:/var/www/certbot:ro
    depends_on:
      - mt5-instance
    networks:
      - mt5-network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  # Certbot for SSL certificate management
  certbot:
    image: certbot/certbot
    container_name: xquantify-tradestation-certbot
    labels:
      - "com.xquantify.project=tradestation"
      - "com.xquantify.component=ssl"
    restart: unless-stopped
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --quiet; sleep 12h & wait $${!}; done;'"
    networks:
      - mt5-network

  # Monitoring
  watchtower:
    image: containrrr/watchtower
    container_name: xquantify-tradestation-watchtower
    labels:
      - "com.xquantify.project=tradestation"
      - "com.xquantify.component=monitoring"
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=3600
    networks:
      - mt5-network

networks:
  mt5-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  mt5-data:
    driver: local
  mt5-logs:
    driver: local